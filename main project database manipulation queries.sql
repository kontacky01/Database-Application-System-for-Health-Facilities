/*
*Get details of all the facilities in the system. Details include facility’s name,
*address, city, province, postal-code, phone number, web address, type,
*capacity, general manager’s name and number of employees currently working
*for the facility. Results should be displayed sorted in ascending order by
*province, then by city, then by type, then by number of employees currently
*working for the facility.
*/
SELECT name, address, location.city, location.province, facilities.postal_code, phone_number,
web_address,
type, capacity, works_at.facility_id, COUNT(works_at.facility_id) AS 'number_Of_Employees' FROM
facilities, works_at, location
WHERE facilities.postal_code = location.postal_code AND facilities.facility_id = works_at.facility_id
GROUP BY works_at.facility_id
ORDER BY location.province, location.city, type, number_Of_Employees;

/*
*Get details of all the employees currently working in a specific facility. Details
*include employee’s first-name, last-name, start date of work, date of birth,
*Medicare card number, telephone-number, address, city, province, postal-code,
*citizenship, and email address. Results should be displayed sorted in ascending
*order by role, then by first name, then by last name.
*/
SELECT CONCAT(first_name, " ", last_name) AS 'name', start_date, date_of_birth,
employees.medicare_number, employees.phone_number, employees.postal_code, citizenship,
employees.email_address, works_at.facility_id, role
FROM works_at, employees
WHERE works_at.medicare_number = employees.medicare_number GROUP BY works_at.facility_id
ORDER BY role, first_name, last_name;

/*
*For a given employee, get the details of all the schedules she/he has been
*scheduled during a specific period of time. Details include facility name, day of
*the year, start time and end time. Results should be displayed sorted in
*ascending order by facility name, then by day of the year, the by start time.
*/
SELECT name, day, start_time, end_time from schedule, facilities
WHERE schedule.medicare_number = 'M002' AND schedule.facility_id = facilities.facility_id
ORDER BY name, day, start_time;

/*
*Get details of all the doctors who have been infected by COVID-19 in the past
*two weeks. Details include doctor’s first-name, last-name, date of infection, and
*the name of the facility that the doctor is currently working for. Results should
*be displayed sorted in ascending order by the facility name, then by the firstname
*of the doctor.
*/
SELECT first_name, last_name, works_at.facility_id, works_at.medicare_number, works_at.role, inf_id,
date, name FROM ((
(infected INNER JOIN works_at ON works_at.medicare_number = infected.medicare_number)
INNER JOIN employees ON works_at.medicare_number = employees.medicare_number)
INNER JOIN facilities ON works_at.facility_id = facilities.facility_id)
WHERE inf_id = 'M3N4O5' AND role = 'Doctor' AND date >= DATE_SUB(curdate(), INTERVAL 13
DAY) AND date < CURDATE()
ORDER BY name, first_name;

/*
*List the emails generated by a given facility. The results should be displayed in
*ascending order by the date of the emails.
*/
SELECT fromFacilityID, subject from log
WHERE fromFacilityID = 'F002'
ORDER BY sentOn;

/*
*For a given facility, generate a list of all the doctors and nurses who have been
*on schedule to work in the last two weeks. The list should include first-name,
*last-name, and role. Results should be displayed in ascending order by role, then
*by first name.
*/
SELECT distinct first_name, last_name, role FROM (
(schedule INNER JOIN works_at ON schedule.medicare_number = works_at.medicare_number)
INNER JOIN employees ON works_at.medicare_number = employees.medicare_number)
WHERE works_at.facility_id = 'F006' AND (role = 'Doctor' OR role = 'Nurse') AND day >=
DATE_SUB(curdate(), INTERVAL 13 DAY) AND day < curdate()
ORDER BY role, first_name;

/*
*For a given facility, give the total hours scheduled for every role during a
*specific period. Results should be displayed in ascending order by role.
*/
SELECT works_at.role,TRUNCATE(SUM(end_time - start_time)/10000, 0) AS
'total_number_Of_Hours_per_Role' FROM schedule
INNER JOIN works_at ON schedule.medicare_number = works_at.medicare_number
WHERE works_at.facility_id = 'F006' AND schedule.day >= '2023-04-01' AND schedule.day <
'2023-04-30'
GROUP by role;

/*
*For every facility, provide the province where the facility is located, the facility
*name, the capacity of the facility, and the total number of employees in the
*facility who have been infected by COVID-19 in the past two weeks. The
*results should be displayed in ascending order by province, then by the total
*number of employees infected.
*/
SELECT name, province, capacity, COUNT(works_at.facility_id) AS 'number_Of_Employees_Infected'
FROM ((
(facilities INNER JOIN location ON facilities.postal_code = location.postal_code)
INNER JOIN works_at ON works_at.facility_id = facilities.facility_id)
INNER JOIN infected ON works_at.medicare_number = infected.medicare_number)
WHERE inf_id = 'M3N4O5'
AND date <= DATE_SUB(curdate(), INTERVAL 13 DAY)
ORDER BY province, number_Of_Employees_Infected;

/*
*For every doctor who is currently working in the province of “Québec”, provide
*the doctor’s first-name, last-name, the city of residence of the doctor, and the
*total number of facilities the doctor is currently working for. Results should be
*displayed in ascending order by city, then in descending order by total number
*of facilities.
*/
SELECT first_name, last_name, location.city, COUNT(works_at.facility_id) AS
'number_Of_Establishments_Of_Employment'
FROM (((works_at INNER JOIN employees ON works_at.medicare_number =
employees.medicare_number)
INNER JOIN facilities ON works_at.facility_id = facilities.facility_id)
INNER JOIN location ON facilities.postal_code = location.postal_code)
WHERE location.province = 'QC' AND role = 'Doctor'
GROUP BY works_at.medicare_number;

/*
*Get details of the nurse(s) who is/are currently working and has the highest
*number of hours scheduled in the system since they started working as a nurse.
*Details include first-name, last-name, first day of work as a nurse, date of birth,
*email address, and total number of hours scheduled.
*/
SELECT first_name, last_name, start_date, date_of_birth, email_address, TRUNCATE(MAX(end_time -
start_time)/10000, 0)
AS 'total_number_Of_Hours_Scheduled'
FROM ((schedule INNER JOIN works_at ON schedule.medicare_number =
works_at.medicare_number)
INNER JOIN employees ON schedule.medicare_number = employees.medicare_number) WHERE role
= 'Nurse';

/*
*Get details of the nurse(s) or the doctor(s) who are currently working and has
*been infected by COVID-19 at least three times. Details include first-name, lastname,
*first day of work as a nurse or as a doctor, role (nurse/doctor), date of
*birth, email address, and total number of hours scheduled. Results should be
*displayed sorted in ascending order by role, then by first name, then by last
*name.
*/
SELECT first_name, last_name, start_date, role, date_of_birth, email_address,
TRUNCATE(MAX(end_time - start_time)/10000, 0) AS 'total_number_Of_Hours_Scheduled'
FROM (SELECT medicare_number, count(medicare_number) AS frequency FROM infected where
inf_id = 'M3N4O5' GROUP BY medicare_number) AS T1, works_at, employees, schedule
WHERE frequency >=3 AND works_at.medicare_number = T1.medicare_number AND
employees.medicare_number = T1.medicare_number
AND (role = 'Doctor' OR role = 'Nurse') AND day >= DATE_SUB(curdate(), INTERVAL 13 DAY)
ORDER BY role, first_name, last_name;

/*
*Get details of the nurse(s) or doctor(s) who are currently working and has never
*been infected by COVID-19. Details include first-name, last-name, first day of
*work as a nurse or as a doctor, role (nurse/doctor), date of birth, email address,
*and total number of hours scheduled. Results should be displayed sorted in
*ascending order by role, then by first name, then by last name
*/
SELECT first_name, last_name, start_date, role, date_of_birth, email_address,
TRUNCATE(MAX(end_time - start_time)/10000, 0) AS 'total_number_Of_Hours_Scheduled'
FROM infected, works_at, employees, schedule
where works_at.medicare_number NOT IN (SELECT medicare_number FROM infected where inf_id =
'M3N4O5')
AND works_at.medicare_number = employees.medicare_number AND works_at.medicare_number =
schedule.medicare_number
AND (role = 'doctor' OR role = 'nurse')
ORDER BY role, first_name, last_name;